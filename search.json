[{"path":"http://christophertkenny.com/feltr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Christopher T. Kenny Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://christophertkenny.com/feltr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher T. Kenny. Author, maintainer.","code":""},{"path":"http://christophertkenny.com/feltr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kenny C (2024). feltr: Access Felt API. R package version 0.1.0,  https://christophertkenny.com/feltr/, https://github.com/christopherkenny/feltr.","code":"@Manual{,   title = {feltr: Access the Felt API},   author = {Christopher T. Kenny},   year = {2024},   note = {R package version 0.1.0,  https://christophertkenny.com/feltr/},   url = {https://github.com/christopherkenny/feltr}, }"},{"path":"http://christophertkenny.com/feltr/index.html","id":"feltr-","dir":"","previous_headings":"","what":"Access the Felt API","title":"Access the Felt API","text":"feltr offers R interface Felt API. can create new maps, edit existing maps, extract data. feltr includes tools working layers, represent geographic data, elements, interactive annotations. Spatial data accessed API transformed work ‘sf’.","code":""},{"path":"http://christophertkenny.com/feltr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the Felt API","text":"can install stable version feltr CRAN : can install development version feltr GitHub :","code":"install.package('feltr') remotes::install_github('christopherkenny/feltr')"},{"path":"http://christophertkenny.com/feltr/index.html","id":"api-key","dir":"","previous_headings":"","what":"API Key","title":"Access the Felt API","text":"API key can obtained signing Felt account looking Account Settings Integrations tab. obtained, can loaded persistent use feltr::set_felt_key('KEY', install = TRUE, r_env = file.path(Sys.getenv('HOME'), '.Renviron')).","code":""},{"path":"http://christophertkenny.com/feltr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Access the Felt API","text":"can create map, add data , even delete . can add data URL. Finally, can even delete map R. returns 204 success.","code":"library(feltr) ## create a map map <- felt_create_map(title = 'feltr README') felt_add_map_layers_url(   map_id = map$id,    url = 'https://www.rocklandgis.com/portal/sharing/rest/content/items/73fc78cb0fb04580b4788937fe5ee697/data',   name = 'Parks' ) #> # A tibble: 0 × 6 #> # ℹ 6 variables: name <chr>, status <chr>, progress <dbl>, id <chr>, #> #   type <chr>, relationships <list> felt_delete_map(map_id = map$id) #> [1] 204"},{"path":"http://christophertkenny.com/feltr/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Access the Felt API","text":"feltr: another R package Eli Pousson name available GitHub.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add layer to library — felt_add_library_layer","title":"Add layer to library — felt_add_library_layer","text":"Add layer library","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add layer to library — felt_add_library_layer","text":"","code":"felt_add_library_layer(map_id, layer_id, name = NULL, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add layer to library — felt_add_library_layer","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_id character, layer identifier url, felt_get_map() name character, name save layer . Optional. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add layer to library — felt_add_library_layer","text":"tibble::tibble clean = TRUE, otherwise list","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add layer to library — felt_add_library_layer","text":"","code":"if (FALSE) { # has_felt_key() felt_add_library_layer(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                       layer_id = '4Lc7RaEyRP2LfARGmR6e4C',                       name = paste0('Test layer ', Sys.time())) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Add layer group to library — felt_add_library_layer_group","title":"Add layer group to library — felt_add_library_layer_group","text":"Add layer group library","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add layer group to library — felt_add_library_layer_group","text":"","code":"felt_add_library_layer_group(map_id, layer_group_id, name = NULL, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add layer group to library — felt_add_library_layer_group","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_group_id character, layer group identifier url, felt_get_map(). name character, name save layer group . Optional. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add layer group to library — felt_add_library_layer_group","text":"tibble::tibble clean = TRUE, otherwise list","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_library_layer_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add layer group to library — felt_add_library_layer_group","text":"","code":"if (FALSE) { # has_felt_key() felt_add_library_layer_group(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                             layer_group_id = 'rHxyTef7S9CO8W7n1PvBVwC',                             name = paste0('Test layer group ', Sys.time())) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Elements to Existing Map — felt_add_map_elements","title":"Add Elements to Existing Map — felt_add_map_elements","text":"Add Elements Existing Map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Elements to Existing Map — felt_add_map_elements","text":"","code":"felt_add_map_elements(map_id, elements, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Elements to Existing Map — felt_add_map_elements","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id elements sf::sf object path geojson file clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Elements to Existing Map — felt_add_map_elements","text":"tibble::tibble elements added","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Elements to Existing Map — felt_add_map_elements","text":"","code":"if (FALSE) { # has_felt_key() elem <- felt_add_map_elements(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                     elements = fs::path_package('feltr',  'bbox.geojson')) elem # and delete layer felt_delete_map_elements(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA', element_id = elem$felt_id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Layers to Existing Map — felt_add_map_layers","title":"Add Layers to Existing Map — felt_add_map_layers","text":"Add Layers Existing Map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Layers to Existing Map — felt_add_map_layers","text":"","code":"felt_add_map_layers(   map_id,   name = NULL,   file_names = NULL,   lat = NULL,   lng = NULL,   zoom = NULL,   clean = TRUE )"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Layers to Existing Map — felt_add_map_layers","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id name Name layer. Required. file_names Files include. Required. lat images, latitude center image. Optional. lng images, longitude center image. Optional. zoom images, zoom level image. Optional. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Layers to Existing Map — felt_add_map_layers","text":"status upload","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Layers to Existing Map — felt_add_map_layers","text":"","code":"if (FALSE) { # has_felt_key() layer <- felt_add_map_layers(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                     file_names = fs::path_package('feltr',  'towns.geojson'),                     name = 'Towns  test') layer }"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Layers to Existing Map from URL — felt_add_map_layers_url","title":"Add Layers to Existing Map from URL — felt_add_map_layers_url","text":"See Felt \"Upload Anything\" documentation detailed examples potential URLs.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Layers to Existing Map from URL — felt_add_map_layers_url","text":"","code":"felt_add_map_layers_url(map_id, url, name = NULL, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Layers to Existing Map from URL — felt_add_map_layers_url","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id url Link layer include. Required name Name layer. Required. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Layers to Existing Map from URL — felt_add_map_layers_url","text":"tibble::tibble created layer","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_add_map_layers_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Layers to Existing Map from URL — felt_add_map_layers_url","text":"","code":"if (FALSE) { # has_felt_key() # split the URL for length reasons url <- paste0( 'https://www.rocklandgis.com/portal/sharing/rest/', 'content/items/73fc78cb0fb04580b4788937fe5ee697/data' ) layer <- felt_add_map_layers_url(     map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',     url = url,     name = 'URL Parks test') layer # and delete the new layer felt_delete_map_layer(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',  layer_id = layer$layer_id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_create_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new map — felt_create_map","title":"Create a new map — felt_create_map","text":"Create new map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_create_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new map — felt_create_map","text":"","code":"felt_create_map(   title = NULL,   basemap = NULL,   layer_urls = NULL,   lat = NULL,   lon = NULL,   zoom = NULL,   description = NULL,   public_access = NULL,   clean = TRUE )"},{"path":"http://christophertkenny.com/feltr/reference/felt_create_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new map — felt_create_map","text":"title Title use map. Defaults NULL. basemap Basemap new map. Defaults NULL. Can URL color hex code. Text options include 'default' (NULL), 'light', 'dark', 'satellite'. layer_urls vector URLs generate layers map. Defaults NULL. lat latitude center map. Defaults NULL. lon longitude center map. Defaults NULL zoom zoom level initialize map . Defaults NULL. description Description map legend. Defaults NULL. public_access Degree public acess. Defaults NULL, view_only. Text options also include 'private', 'view_and_comment', 'view_comment_and_edit'. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_create_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new map — felt_create_map","text":"tibble::tibble new map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_create_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new map — felt_create_map","text":"","code":"if (FALSE) { # has_felt_key() map <- felt_create_map(title = 'feltr example') map # and delete it again felt_delete_map(map_id = map$id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete an existing map — felt_delete_map","title":"Delete an existing map — felt_delete_map","text":"Delete existing map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete an existing map — felt_delete_map","text":"","code":"felt_delete_map(map_id)"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete an existing map — felt_delete_map","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete an existing map — felt_delete_map","text":"response code","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete an existing map — felt_delete_map","text":"","code":"if (FALSE) { # has_felt_key() map <- felt_create_map(title = 'feltr example') felt_delete_map(map_id = map$id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete an existing element — felt_delete_map_elements","title":"Delete an existing element — felt_delete_map_elements","text":"Delete existing element","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete an existing element — felt_delete_map_elements","text":"","code":"felt_delete_map_elements(map_id, element_id)"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete an existing element — felt_delete_map_elements","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id element_id element identifier, returned felt_get_map_elements() felt_add_map_elements()","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete an existing element — felt_delete_map_elements","text":"response code","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete an existing element — felt_delete_map_elements","text":"","code":"if (FALSE) { # has_felt_key() elem <- felt_add_map_elements(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                     elements = fs::path_package('feltr',  'bbox.geojson')) elem # and delete layer felt_delete_map_elements(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA', element_id = elem$felt_id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Layer from an Existing Map — felt_delete_map_layer","title":"Delete Layer from an Existing Map — felt_delete_map_layer","text":"Delete Layer Existing Map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Layer from an Existing Map — felt_delete_map_layer","text":"","code":"felt_delete_map_layer(map_id, layer_id, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Layer from an Existing Map — felt_delete_map_layer","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_id character, layer identifier url, felt_get_map() clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Layer from an Existing Map — felt_delete_map_layer","text":"response code","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_delete_map_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Layer from an Existing Map — felt_delete_map_layer","text":"","code":"if (FALSE) { # has_felt_key() # split the URL for length reasons url <- paste0( 'https://www.rocklandgis.com/portal/sharing/rest/', 'content/items/73fc78cb0fb04580b4788937fe5ee697/data' ) layer <- felt_add_map_layers_url(     map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',     url = url,     name = 'URL Parks test') layer # and delete the new layer felt_delete_map_layer(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',  layer_id = layer$layer_id) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Comments on an Existing Map — felt_get_comments","title":"Export Comments on an Existing Map — felt_get_comments","text":"Export Comments Existing Map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Comments on an Existing Map — felt_get_comments","text":"","code":"felt_get_comments(map_id, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Comments on an Existing Map — felt_get_comments","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Comments on an Existing Map — felt_get_comments","text":"tibble::tibble map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Comments on an Existing Map — felt_get_comments","text":"","code":"if (FALSE) { # has_felt_key() felt_get_comments(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA') }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_library.html","id":null,"dir":"Reference","previous_headings":"","what":"List all layers in your workspace library — felt_get_library","title":"List all layers in your workspace library — felt_get_library","text":"List layers workspace library","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all layers in your workspace library — felt_get_library","text":"","code":"felt_get_library(source = \"workspace\", clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_library.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all layers in your workspace library — felt_get_library","text":"source character, source layers, one workspace, felt, clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_library.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all layers in your workspace library — felt_get_library","text":"tibble::tibble clean = TRUE, otherwise list","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_library.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all layers in your workspace library — felt_get_library","text":"","code":"if (FALSE) { # has_felt_key() felt_get_library() }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Map Information from Map ID — felt_get_map","title":"Get Map Information from Map ID — felt_get_map","text":"felt_get_map() returns identifying information map felt_get_map_layers() returns information layer map felt_get_map_elements() returns shapes layer map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Map Information from Map ID — felt_get_map","text":"","code":"felt_get_map(map_id, clean = TRUE)  felt_get_map_layers(map_id, clean = TRUE)  felt_get_map_layer(map_id, layer_id, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Map Information from Map ID — felt_get_map","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id clean logical, whether turn API response tibble::tibble layer_id character, layer identifier url, felt_get_map()","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Map Information from Map ID — felt_get_map","text":"tibble::tibble map, clean = TRUE, otherwise list","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Map Information from Map ID — felt_get_map","text":"","code":"if (FALSE) { # has_felt_key() felt_get_map('Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA') felt_get_map_layers('Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA') # \\donttest{ # slower, as it has to build the shapes from the API result felt_get_map_elements('Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA') # } }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Map Elements from Map ID — felt_get_map_elements","title":"Get Map Elements from Map ID — felt_get_map_elements","text":"Get Map Elements Map ID","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Map Elements from Map ID — felt_get_map_elements","text":"","code":"felt_get_map_elements(map_id, clean = TRUE)  felt_get_map_element_groups(map_id, clean = TRUE)  felt_get_map_elements_in_group(map_id, group_id, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Map Elements from Map ID — felt_get_map_elements","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id clean logical, whether turn API response tibble::tibble group_id group identifier, returned felt_get_map_element_groups()","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Map Elements from Map ID — felt_get_map_elements","text":"tibble::tibble map","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Map Elements from Map ID — felt_get_map_elements","text":"","code":"if (FALSE) { # has_felt_key() felt_get_map_elements(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA') felt_get_map_element_groups('TBI8sDkmQjuK2GX9CSiHiUA') felt_get_map_elements_in_group('TBI8sDkmQjuK2GX9CSiHiUA', '3Wl5s2AqRmiYgO9CrBFxO3D') }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_layer_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information for a layer group — felt_get_map_layer_group","title":"Get information for a layer group — felt_get_map_layer_group","text":"Get information layer group","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_layer_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information for a layer group — felt_get_map_layer_group","text":"","code":"felt_get_map_layer_group(map_id, layer_group_id, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_layer_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information for a layer group — felt_get_map_layer_group","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_group_id character, layer group identifier url, felt_get_map(). clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_layer_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information for a layer group — felt_get_map_layer_group","text":"tibble::tibble layer group, clean = TRUE, otherwise list","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_map_layer_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information for a layer group — felt_get_map_layer_group","text":"","code":"if (FALSE) { # has_felt_key() felt_get_map_layer_group(   map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',   layer_group_id = 'rHxyTef7S9CO8W7n1PvBVwC' ) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information about the user — felt_get_user","title":"Obtain information about the user — felt_get_user","text":"Obtain information user","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information about the user — felt_get_user","text":"","code":"felt_get_user(clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_get_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain information about the user — felt_get_user","text":"clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information about the user — felt_get_user","text":"tibble::tibble information user","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_get_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain information about the user — felt_get_user","text":"","code":"if (FALSE) { # has_felt_key() felt_get_user() }"},{"path":"http://christophertkenny.com/feltr/reference/felt_patch_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Felt Style Information for a Layer — felt_patch_style","title":"Update Felt Style Information for a Layer — felt_patch_style","text":"details Felt Style Language, see https://felt.com/blog/felt-style-language.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_patch_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Felt Style Information for a Layer — felt_patch_style","text":"","code":"felt_patch_style(map_id, layer_id, fsl, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_patch_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Felt Style Information for a Layer — felt_patch_style","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_id character, layer identifier url, felt_get_map() fsl list indicating Felt style language update layer . must valid FSL. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_patch_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Felt Style Information for a Layer — felt_patch_style","text":"response data","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_patch_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Felt Style Information for a Layer — felt_patch_style","text":"","code":"if (FALSE) { # has_felt_key() # URL Parks layer # read as a list layer <- felt_get_map_layer(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                             layer_id = 'eufG5hWKRRSURHE8YcGGXA',                             clean = FALSE) # use the existing style for easiest modification style <- layer$style style$label$minZoom <- round(runif(1, 0, 23))  felt_patch_style(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                  layer_id = 'eufG5hWKRRSURHE8YcGGXA',                  fsl = style) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_refresh_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Refresh an existing layer — felt_refresh_layer","title":"Refresh an existing layer — felt_refresh_layer","text":"Refresh existing layer","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_refresh_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refresh an existing layer — felt_refresh_layer","text":"","code":"felt_refresh_layer(map_id, layer_id, file_names, clean = TRUE)"},{"path":"http://christophertkenny.com/feltr/reference/felt_refresh_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refresh an existing layer — felt_refresh_layer","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_id character, layer identifier url, felt_get_map() file_names file names upload original layer created file upload clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_refresh_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refresh an existing layer — felt_refresh_layer","text":"tibble::tibble upload information","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_refresh_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refresh an existing layer — felt_refresh_layer","text":"","code":"if (FALSE) { # has_felt_key() felt_refresh_layer(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                   layer_id = 'rCfurZSFShycXHCBw69CdKB',                   file_names = fs::path_package('feltr',  'towns.geojson')) felt_refresh_layer(map_id = 'Rockland-2024-Districts-TBI8sDkmQjuK2GX9CSiHiUA',                   layer_id = 'eufG5hWKRRSURHE8YcGGXA') }"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Layer's Details — felt_update_layer_details","title":"Update a Layer's Details — felt_update_layer_details","text":"Allows updates name, ordering key, subtitle.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Layer's Details — felt_update_layer_details","text":"","code":"felt_update_layer_details(   map_id,   layer_id,   layer_group_id = NULL,   name = NULL,   ordering_key = NULL,   subtitle = NULL,   clean = TRUE )"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Layer's Details — felt_update_layer_details","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_id character, layer identifier url, felt_get_map() layer_group_id character, layer group identifier url, felt_get_map(). name Name layer. Defaults NULL. ordering_key Integer order layers. Defaults NULL. subtitle Subtitle layer. Defaults NULL. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Layer's Details — felt_update_layer_details","text":"response data","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Layer's Details — felt_update_layer_details","text":"","code":"if (FALSE) { # has_felt_key() felt_update_layer_details(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                           layer_id = 'eufG5hWKRRSURHE8YcGGXA',                           subtitle = paste0('tested ', Sys.Date())) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_group_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Layer Group's Details — felt_update_layer_group_details","title":"Update a Layer Group's Details — felt_update_layer_group_details","text":"Allows updates name, ordering key, subtitle.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_group_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Layer Group's Details — felt_update_layer_group_details","text":"","code":"felt_update_layer_group_details(   map_id,   layer_group_id,   name = NULL,   ordering_key = NULL,   subtitle = NULL,   clean = TRUE )"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_group_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Layer Group's Details — felt_update_layer_group_details","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id layer_group_id character, layer group identifier url, felt_get_map(). name Name layer group. Required. ordering_key Integer order . Defaults NULL. subtitle Subtitle layer group. Defaults NULL. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_group_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Layer Group's Details — felt_update_layer_group_details","text":"response data","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_layer_group_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Layer Group's Details — felt_update_layer_group_details","text":"","code":"if (FALSE) { # has_felt_key() felt_update_layer_group_details(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                                layer_group_id = 'rHxyTef7S9CO8W7n1PvBVwC',                                name = 'Polling Sites 2020',                                subtitle = paste0('tested ', Sys.Date())) }"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_map_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Map's Details — felt_update_map_details","title":"Update a Map's Details — felt_update_map_details","text":"Allows updates title, description, level public access.","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_map_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Map's Details — felt_update_map_details","text":"","code":"felt_update_map_details(   map_id,   title = NULL,   description = NULL,   public_access = NULL,   clean = TRUE )"},{"path":"http://christophertkenny.com/feltr/reference/felt_update_map_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Map's Details — felt_update_map_details","text":"map_id character, map identifier url, https://felt.com/map/Readable-Name-map_id title Title use map. Defaults NULL. description Description map legend. Defaults NULL. public_access Degree public acess. Defaults NULL, view_only. Text options also include 'private', 'view_and_comment', 'view_comment_and_edit'. clean logical, whether turn API response tibble::tibble","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_map_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Map's Details — felt_update_map_details","text":"response data","code":""},{"path":"http://christophertkenny.com/feltr/reference/felt_update_map_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Map's Details — felt_update_map_details","text":"","code":"if (FALSE) { # has_felt_key() felt_update_map_details(map_id = 'TBI8sDkmQjuK2GX9CSiHiUA',                         title = paste0('Rockland 2024 Districts, tested ', Sys.Date())) }"},{"path":"http://christophertkenny.com/feltr/reference/feltr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"feltr: Access the Felt API — feltr-package","title":"feltr: Access the Felt API — feltr-package","text":"Upload, download, edit internet maps Felt API (https://feltmaps.notion.site/Felt-Public-API-reference-c01e0e6b0d954a678c608131b894e8e1). Allows users create new maps, edit existing maps, extract data. Provides tools working layers, represent geographic data, elements, interactive annotations. Spatial data accessed API transformed work 'sf'.","code":""},{"path":[]},{"path":"http://christophertkenny.com/feltr/reference/feltr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"feltr: Access the Felt API — feltr-package","text":"Maintainer: Christopher T. Kenny christopherkenny@fas.harvard.edu (ORCID)","code":""},{"path":"http://christophertkenny.com/feltr/reference/key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or Get Felt API Key — key","title":"Check or Get Felt API Key — key","text":"Check Get Felt API Key","code":""},{"path":"http://christophertkenny.com/feltr/reference/key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or Get Felt API Key — key","text":"","code":"has_felt_key()  get_felt_key()  felt_get_key()  felt_has_key()"},{"path":"http://christophertkenny.com/feltr/reference/key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or Get Felt API Key — key","text":"logical , key get","code":""},{"path":"http://christophertkenny.com/feltr/reference/key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or Get Felt API Key — key","text":"","code":"has_felt_key() #> [1] FALSE"},{"path":"http://christophertkenny.com/feltr/reference/set_felt_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Entry to Renviron — set_felt_key","title":"Add Entry to Renviron — set_felt_key","text":"Adds Felt API key .Renviron.","code":""},{"path":"http://christophertkenny.com/feltr/reference/set_felt_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Entry to Renviron — set_felt_key","text":"","code":"set_felt_key(key, overwrite = FALSE, install = FALSE, r_env = NULL)  felt_set_key(key, overwrite = FALSE, install = FALSE, r_env = NULL)"},{"path":"http://christophertkenny.com/feltr/reference/set_felt_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Entry to Renviron — set_felt_key","text":"key Character. API key add add. overwrite Defaults FALSE. Boolean. existing FELT_KEY Renviron overwritten? install Defaults FALSE. Boolean. added environment file, r_env? r_env Path install install TRUE.","code":""},{"path":"http://christophertkenny.com/feltr/reference/set_felt_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Entry to Renviron — set_felt_key","text":"key, invisibly","code":""},{"path":"http://christophertkenny.com/feltr/reference/set_felt_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Entry to Renviron — set_felt_key","text":"","code":"example_env <- tempfile(fileext = '.Renviron') set_felt_key('1234', r_env = example_env) # r_env should likely be: file.path(Sys.getenv('HOME'), '.Renviron')"},{"path":"http://christophertkenny.com/feltr/news/index.html","id":"feltr-010","dir":"Changelog","previous_headings":"","what":"feltr 0.1.0","title":"feltr 0.1.0","text":"Adds function felt_update_map_details() update title, description, privacy map. Adds function refresh layers via felt_refresh_layer(). Adds function download layer felt_get_map_layer(). Adds support interacting layer groups, felt_get_map_layer_groups() felt_update_layer_group_details(). Adds functions work elements, including felt_get_map_elements(), felt_add_map_element(), felt_delete_map_element(), felt_get_map_elements_in_group(), felt_get_map_element_groups(). Adds functions library-level data felt_get_library(), felt_add_library_layer(), felt_add_library_layer_group(). Removes felt_finish_upload() function, longer needed. Removes felt_get_style() function, removed API. Instead, use felt_get_map_layers() now includes style information layer. Adds clean argument functions control whether tibble::tibble list returned. allows flexibility advanced users, especially working custom Felt style language inputs. Adds improvements working keys adding aliases felt_set_key(), felt_get_key(), felt_has_key(). get_felt_key() now returns key invisibly avoid printing console.","code":""},{"path":"http://christophertkenny.com/feltr/news/index.html","id":"feltr-004","dir":"Changelog","previous_headings":"","what":"feltr 0.0.4","title":"feltr 0.0.4","text":"CRAN release: 2023-11-05 Removes felt_get_map_geojson() felt_get_map_sf(), Felt removed capabilities. restored future version, capabilities available .","code":""},{"path":"http://christophertkenny.com/feltr/news/index.html","id":"feltr-003","dir":"Changelog","previous_headings":"","what":"feltr 0.0.3","title":"feltr 0.0.3","text":"Adds support comment export API felt_get_comments(). Improves consistency return values felt_add_map_layers_url().","code":""},{"path":"http://christophertkenny.com/feltr/news/index.html","id":"feltr-002","dir":"Changelog","previous_headings":"","what":"feltr 0.0.2","title":"feltr 0.0.2","text":"CRAN release: 2023-07-06 Adds path arguments felt_set_key() felt_get_map_sf() ensure compliance CRAN policies writing files.","code":""},{"path":"http://christophertkenny.com/feltr/news/index.html","id":"feltr-001","dir":"Changelog","previous_headings":"","what":"feltr 0.0.1","title":"feltr 0.0.1","text":"Added NEWS.md file track changes package. Initial package support API features July 2023.","code":""}]
